(()=>{"use strict";class t{static async list(t){const e=await fetch("http://localhost:7070/?method=allTickets");if(e.ok)try{t(await e.json())}catch(t){console.error(t)}}static async get(t,e){const i=await fetch(`http://localhost:7070/?method=ticketById&id=${t}`);if(i.ok)try{e(await i.json())}catch(t){console.error(t)}}static async create(t,e){const i=await fetch("http://localhost:7070/?method=createTicket",{method:"POST",body:JSON.stringify(Object.fromEntries(t))});if(i.ok)try{e(await i.json())}catch(t){console.error(t)}}static async update(t,e,i){let s=e;s instanceof FormData&&(s=Object.fromEntries(s));const n=await fetch(`http://localhost:7070/?method=updateById&id=${t}`,{method:"POST",body:JSON.stringify(s)});if(n.ok)try{i(await n.json())}catch(t){console.error(t)}}static async delete(t,e){if((await fetch(`http://localhost:7070/?method=deleteById&id=${t}`)).ok)try{e()}catch(t){console.error(t)}}}class e{constructor(t){this.container=t}renderItem(t){this.container.querySelector(".tickets__list").insertAdjacentHTML("beforeend",e.item(t))}render(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.container.appendChild(e.btn()),this.container.appendChild(e.list(t))}static btn(){const t=document.createElement("div");return t.classList.add("tickets__btn-add"),t.innerText="Добавить тикет",t}static list(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;const i=document.createElement("div");return i.classList.add("tickets__list"),t&&t.forEach((t=>{i.insertAdjacentHTML("beforeend",e.item(t))})),i}static item(t){const e=new Date(t.created);return`\n      <div class="tickets__item" data-id="${t.id}">\n        <div class="tickets__item-preview">\n          <div class="tickets__item-status${t.status?" tickets__item-status-complete":""}"></div>\n          <div class="tickets__item-text">\n            <div class="tickets__item-title">\n              ${t.name}\n            </div>\n            <div class="tickets__item-description"></div>\n          </div>\n          <div class="tickets__item-datetime">\n            ${e.toLocaleDateString(void 0,{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"})}\n          </div>\n          <div class="tickets__item-buttons">\n            <div class="tickets__btn-edit tickets__btn "></div>\n            <div class="tickets__btn-remove tickets__btn"></div>\n          </div>\n        </div>\n      </div>\n    `}}class i{constructor(){this.container=document.querySelector("body"),this.className="loading"}init(){this.check()&&this.remove(),this.render()}remove(){const t=this.container.querySelectorAll(`.${this.className}`);t.length&&setTimeout((()=>{t.forEach((t=>{t.parentNode.removeChild(t)}))}),300)}render(){this.container.appendChild(this.markup())}check(){return!!this.container.querySelectorAll(`.${this.className}`).length}markup(){const t=document.createElement("div");return t.classList.add(this.className),t}}class s{constructor(){this.container=document.querySelector("body")}render(t){const e=document.querySelector(".loading"),i=s.markup(t);s.remove(),e?e.insertAdjacentHTML("beforebegin",i):this.container.insertAdjacentHTML("beforeend",i);document.querySelector(".form__btn-close").addEventListener("click",s.close)}static close(){s.remove()}static remove(){const t=document.querySelectorAll(".popup");t.length&&t.forEach((t=>{t.parentNode.removeChild(t)}))}static markup(t){return`\n      <div class="popup">\n        <div class="popup__window">\n          <div class="popup__title">${t.title}</div>\n          <div class="popup__body">${t.body}</div>\n        </div>\n      </div>\n    `}}class n{static markup(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return`\n      <form class="form" name="${t?"edit":"create"}">\n        <div class="form__group">\n          <label for="popupFormName" class="form__label">Краткое описание</label>\n          <input type="text" class="form__input-text" name="name" id="popupFormName" value="${t?t.name:""}">\n        </div>\n        <div class="form__group">\n          <label for="popupFormDescription" class="form__label">Подробное описание</label>\n          <textarea name="description" id="popupFormDescription" class="form__textarea">${t?t.description:""}</textarea>\n        </div>\n        <div class="form__buttons">\n          <button class="form__btn form__btn-close" type="button">Отмена</button>\n          <button class="form__btn">Ok</button>\n        </div>\n      </form>\n    `}static markupDelete(){return'\n      <form class="form" name="delete">\n        <div class="form__group">\n          Вы уверены, что хотите удалить тикет? Это действие необратимо.\n        </div>\n        <div class="form__buttons">\n          <button class="form__btn form__btn-close" type="button">Отмена</button>\n          <button class="form__btn">Ok</button>\n        </div>\n      </form>\n    '}}const c=document.getElementById("root");new class{constructor(t){if(!(t instanceof HTMLElement))throw new Error("This is not HTML element!");this.view=new e(t),this.loading=new i,this.popup=new s,this.clickList=this.clickList.bind(this),this.clickBtnAdd=this.clickBtnAdd.bind(this),this.submitForm=this.submitForm.bind(this),this.renderTicket=this.renderTicket.bind(this)}init(){this.loading.init(),t.list(this.view.render.bind(this.view)).then((()=>{const t=document.querySelector(".tickets__list"),e=document.querySelector(".tickets__btn-add");t.addEventListener("click",this.clickList),e.addEventListener("click",this.clickBtnAdd),this.loading.remove()}))}renderTicket(t){this.view.renderItem(t),this.loading.remove()}submitForm(e,i,n){n.preventDefault(),this.loading.init(),s.remove();const c=new FormData(e);switch(e.getAttribute("name")){case"create":t.create(c,this.renderTicket);break;case"delete":t.delete(i.id,this.removeTicket.bind(this,i.item));break;case"edit":t.update(i.data.id,c,this.editTicket.bind(this,i.item,i.data.id))}}clickBtnAdd(){this.renderForm("Добавить тикет",n.markup())}clickTitle(e,i){const s=i;s.classList.contains("tickets__item-description-show")?(s.classList.remove("tickets__item-description-show"),s.innerText=""):(this.loading.init(),t.get(e,this.showDescription.bind(this,i)))}renderForm(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this.popup.render({title:t,body:e});const s=document.querySelector(".form");s.addEventListener("submit",this.submitForm.bind(this,s,i))}clickRemove(t,e){this.renderForm("Удалить тикет",n.markupDelete(),{id:t,item:e})}removeTicket(t){t.remove(),this.loading.remove()}editTicket(t,e,i){const s=i.filter((t=>t.id===e))[0];t.querySelector(".tickets__item-title").innerText=s.name,this.loading.remove()}showEdit(t,e){this.renderForm("Изменить тикет",n.markup(e),{item:t,data:e}),this.loading.remove()}clickEdit(e,i){this.loading.init(),t.get(e,this.showEdit.bind(this,i))}clickList(t){const e=t.target,i=e.classList[0],s=e.closest(".tickets__item"),{id:n}=s.dataset;switch(i){case"tickets__item-title":{const t=s.querySelector(".tickets__item-description");this.clickTitle(n,t);break}case"tickets__item-status":this.clickStatus(n,e);break;case"tickets__btn-remove":this.clickRemove(n,s);break;case"tickets__btn-edit":this.clickEdit(n,s)}}showDescription(t,e){const i=t;i.innerText=e.description,i.classList.add("tickets__item-description-show"),this.loading.remove()}clickStatus(e,i){this.loading.init();let s=!0;i.classList.contains("tickets__item-status-complete")&&(s=!1),t.update(e,{status:s},this.toggleStatus.bind(this,i))}toggleStatus(t){t.classList.toggle("tickets__item-status-complete"),this.loading.remove()}}(c).init()})();